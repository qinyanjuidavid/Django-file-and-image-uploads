# Generated by Django 4.1.1 on 2023-02-05 11:39

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import modules.store.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="author id",
                    ),
                ),
                ("name", models.CharField(max_length=256, verbose_name="full name")),
                ("bio", models.TextField(blank=True, null=True, verbose_name="bio")),
                (
                    "display_image",
                    models.ImageField(
                        default="display-img.png",
                        upload_to="authors-image/",
                        verbose_name="display image",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="date of birth"
                    ),
                ),
                (
                    "date_of_death",
                    models.DateField(
                        blank=True, null=True, verbose_name="date of death"
                    ),
                ),
                (
                    "country",
                    django_countries.fields.CountryField(
                        blank=True, max_length=2, null=True, verbose_name="country"
                    ),
                ),
                (
                    "verified",
                    models.BooleanField(default=False, verbose_name="verified"),
                ),
            ],
            options={"verbose_name_plural": "Authors", "ordering": ["-created_at"],},
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "title",
                    models.CharField(max_length=256, unique=True, verbose_name="title"),
                ),
                (
                    "cover",
                    models.ImageField(
                        default="book.png",
                        upload_to=modules.store.models.book_covers_directory_path,
                        verbose_name="cover image",
                    ),
                ),
                (
                    "book",
                    models.FileField(
                        upload_to=modules.store.models.books_directory_path,
                        verbose_name="book",
                    ),
                ),
                (
                    "audio",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=modules.store.models.book_audio_directory_path,
                        verbose_name="audio",
                    ),
                ),
                (
                    "year_published",
                    models.DateField(
                        blank=True, null=True, verbose_name="year published"
                    ),
                ),
                (
                    "ISBN",
                    models.CharField(max_length=256, unique=True, verbose_name="ISBN"),
                ),
                (
                    "summary",
                    models.TextField(blank=True, null=True, verbose_name="summary"),
                ),
                (
                    "book_excerpt",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="book excerpt",
                    ),
                ),
                ("available", models.BooleanField(default=False, verbose_name="avail")),
                (
                    "author",
                    models.ManyToManyField(related_name="authors", to="store.author"),
                ),
            ],
            options={"verbose_name_plural": "Books", "ordering": ["-created_at"],},
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "genre",
                    models.CharField(max_length=256, unique=True, verbose_name="genre"),
                ),
                (
                    "description",
                    models.TextField(
                        default="***No description***", verbose_name="description"
                    ),
                ),
                (
                    "genre_image",
                    models.ImageField(
                        default="genre.png",
                        upload_to=modules.store.models.book_genre_covers_directory_path,
                        verbose_name="genre image",
                    ),
                ),
            ],
            options={"verbose_name_plural": "Genre", "ordering": ["-created_at"],},
        ),
        migrations.CreateModel(
            name="Publisher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        max_length=256, unique=True, verbose_name="publisher's name"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
            ],
            options={"verbose_name_plural": "Publishers", "ordering": ["-created_at"],},
        ),
        migrations.CreateModel(
            name="Ratings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "rating",
                    models.FloatField(
                        default=0,
                        validators=[
                            django.core.validators.MaxValueValidator(5),
                            django.core.validators.MinValueValidator(0),
                        ],
                        verbose_name="rating",
                    ),
                ),
                (
                    "comment",
                    models.TextField(blank=True, null=True, verbose_name="comment"),
                ),
                ("flag", models.BooleanField(default=False, verbose_name="flag")),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="store.book"
                    ),
                ),
                (
                    "reader",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="accounts.reader",
                    ),
                ),
            ],
            options={"verbose_name_plural": "Ratings", "ordering": ["-created_at"],},
        ),
        migrations.CreateModel(
            name="Favourite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "books",
                    models.ManyToManyField(
                        related_name="favourite_books", to="store.book"
                    ),
                ),
                (
                    "reader",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.reader",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Favourite Books",
                "ordering": ["-id", "-created_at"],
            },
        ),
        migrations.AddField(
            model_name="book",
            name="genre",
            field=models.ManyToManyField(related_name="genres", to="store.genre"),
        ),
        migrations.AddField(
            model_name="book",
            name="publisher",
            field=models.ManyToManyField(
                related_name="publishers", to="store.publisher"
            ),
        ),
    ]
